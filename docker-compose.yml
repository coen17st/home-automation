version: '3.1'
services:

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  homeassistant:
    image: home-assistant:latest
    container_name: home-assistant
    depends_on:
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./home-assistant/config:/config
    environment:
      - TZ=Europe/Amsterdam
    network_mode: host
    healthcheck:
      test: wget http://homeassistant:8123 --no-check-certificate -q -O - > /dev/null 2>&1
      interval: 1m30s
      timeout: 10s
      retries: 3

  mariadb:
    image: mariadb
    container_name: mariadb
    restart: always
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      TZ: Europe/Amsterdam
      MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_DATABASE: ha_db
      MYSQL_USER: "${MYSQL_USER}"
      MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
    ports:
      - 3306:3306
    networks:
      - home-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 8080:8080
    environment:
      TZ: Europe/Amsterdam
    networks:
      - home-network
    healthcheck:
      test: wget http://adminer:8080 --no-check-certificate -q -O - > /dev/null 2>&1
      interval: 1m30s
      timeout: 10s
      retries: 3

# VOLUMES

volumes:
  mariadb_data:
    name: mariadb_data
  portainer_data:
    name: portainer_data

# NETWORKS

networks:
  home-network:
    name: home-network
    driver: bridge
